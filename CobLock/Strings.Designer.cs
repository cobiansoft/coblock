//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cobian.Locker {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cobian.Locker.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All rights reserved.
        /// </summary>
        internal static string AboutAllRights {
            get {
                return ResourceManager.GetString("AboutAllRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ©{0} {1}.
        /// </summary>
        internal static string AboutCopyright {
            get {
                return ResourceManager.GetString("AboutCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        internal static string AboutProgram {
            get {
                return ResourceManager.GetString("AboutProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        internal static string AboutVersion {
            get {
                return ResourceManager.GetString("AboutVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically delete the encrypted source files (!). (true/false).
        /// </summary>
        internal static string CommentDelete {
            get {
                return ResourceManager.GetString("CommentDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encryption method to use. Possible values: aes128, aes192, aes256, rsa.
        /// </summary>
        internal static string CommentEncryptionMethod {
            get {
                return ResourceManager.GetString("CommentEncryptionMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default settings for {0}.
        /// </summary>
        internal static string CommentHeader {
            get {
                return ResourceManager.GetString("CommentHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process hidden files? (true/false).
        /// </summary>
        internal static string CommentHidden {
            get {
                return ResourceManager.GetString("CommentHidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key to use for decryption..
        /// </summary>
        internal static string CommentKeyDecryption {
            get {
                return ResourceManager.GetString("CommentKeyDecryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key to use for encryption..
        /// </summary>
        internal static string CommentKeyEncryption {
            get {
                return ResourceManager.GetString("CommentKeyEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default key size in bytes when creating a key..
        /// </summary>
        internal static string CommentKeySize {
            get {
                return ResourceManager.GetString("CommentKeySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible values:  1024, 2048, 3072, 4096, 8192.
        /// </summary>
        internal static string CommentKeySize2 {
            get {
                return ResourceManager.GetString("CommentKeySize2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Laconic mode? (true/false).
        /// </summary>
        internal static string CommentLaconic {
            get {
                return ResourceManager.GetString("CommentLaconic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password to use when encrypting or decrypting (or for private keys)..
        /// </summary>
        internal static string CommentPassword {
            get {
                return ResourceManager.GetString("CommentPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store it only in encrypted form using &quot;coblock ep&quot;..
        /// </summary>
        internal static string CommentPassword1 {
            get {
                return ResourceManager.GetString("CommentPassword1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s NOT safe to store your password here. Leave this field empty for best security. .
        /// </summary>
        internal static string CommentPassword2 {
            get {
                return ResourceManager.GetString("CommentPassword2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process subdirectories when the source is a directory. (true/false).
        /// </summary>
        internal static string CommentRecursive {
            get {
                return ResourceManager.GetString("CommentRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Answer Yes to any questions , for example, when overwriting files (!). (true/false).
        /// </summary>
        internal static string CommentYes {
            get {
                return ResourceManager.GetString("CommentYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied while writing the settings file &apos;{0}&apos;. Elevation needed?.
        /// </summary>
        internal static string ErrAccessDenied {
            get {
                return ResourceManager.GetString("ErrAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the directory &apos;{0}&apos;. Access denied. Elevation needed?.
        /// </summary>
        internal static string ErrAccessDeniedCD {
            get {
                return ResourceManager.GetString("ErrAccessDeniedCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad encryption header..
        /// </summary>
        internal static string ErrBadEncryptionHeader {
            get {
                return ResourceManager.GetString("ErrBadEncryptionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect file name..
        /// </summary>
        internal static string ErrBadFileName {
            get {
                return ResourceManager.GetString("ErrBadFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad input..
        /// </summary>
        internal static string ErrBadInput {
            get {
                return ResourceManager.GetString("ErrBadInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad key or corrupted file..
        /// </summary>
        internal static string ErrBadKeyOrCorruptedFile {
            get {
                return ResourceManager.GetString("ErrBadKeyOrCorruptedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported key size..
        /// </summary>
        internal static string ErrBadKeySize {
            get {
                return ResourceManager.GetString("ErrBadKeySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad password or corrupted file..
        /// </summary>
        internal static string ErrBadPasswordOrCorruptedFile {
            get {
                return ResourceManager.GetString("ErrBadPasswordOrCorruptedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad password or corrupted string..
        /// </summary>
        internal static string ErrBadPasswordOrCorruptedString {
            get {
                return ResourceManager.GetString("ErrBadPasswordOrCorruptedString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while creating the directory &apos;{0}&apos;: {1}..
        /// </summary>
        internal static string ErrConfigErrorD {
            get {
                return ResourceManager.GetString("ErrConfigErrorD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while writing the configuration file &apos;{0}&apos;: {1}..
        /// </summary>
        internal static string ErrConfigWrite {
            get {
                return ResourceManager.GetString("ErrConfigWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corrupted file or unknown encryption method..
        /// </summary>
        internal static string ErrCorruptedFile {
            get {
                return ResourceManager.GetString("ErrCorruptedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while creating and saving the pair of keys: {0}..
        /// </summary>
        internal static string ErrCreatingKeyPair {
            get {
                return ResourceManager.GetString("ErrCreatingKeyPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cryptographic error: {0}.
        /// </summary>
        internal static string ErrCryptoError {
            get {
                return ResourceManager.GetString("ErrCryptoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password to encrypt cannot be null..
        /// </summary>
        internal static string ErrEmptyInputPassword {
            get {
                return ResourceManager.GetString("ErrEmptyInputPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password cannot be empty..
        /// </summary>
        internal static string ErrEmptyPassword {
            get {
                return ResourceManager.GetString("ErrEmptyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password to use for encryption cannot be empty..
        /// </summary>
        internal static string ErrEmptyPasswordEnc {
            get {
                return ResourceManager.GetString("ErrEmptyPasswordEnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input/output error: {0}.
        /// </summary>
        internal static string ErrIOError {
            get {
                return ResourceManager.GetString("ErrIOError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t obtain the settings directory..
        /// </summary>
        internal static string ErrNoConfigDir {
            get {
                return ResourceManager.GetString("ErrNoConfigDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A destination directory must be specified..
        /// </summary>
        internal static string ErrNoDestination {
            get {
                return ResourceManager.GetString("ErrNoDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while parsing the command line arguments..
        /// </summary>
        internal static string ErrNoParser {
            get {
                return ResourceManager.GetString("ErrNoParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source file(s) to encrypt must be specified..
        /// </summary>
        internal static string ErrNoSource {
            get {
                return ResourceManager.GetString("ErrNoSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source file(s) to decrypt must be specified..
        /// </summary>
        internal static string ErrNoSourceD {
            get {
                return ResourceManager.GetString("ErrNoSourceD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation not supported: {0}.
        /// </summary>
        internal static string ErrNotSupported {
            get {
                return ResourceManager.GetString("ErrNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect parameter. Run &quot;coblock help&quot; to get a list of the commands and flags to use..
        /// </summary>
        internal static string ErrNoVerb {
            get {
                return ResourceManager.GetString("ErrNoVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t obtain the key from the given file..
        /// </summary>
        internal static string ErrorBadKey {
            get {
                return ResourceManager.GetString("ErrorBadKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: {0}.
        /// </summary>
        internal static string ErrorHeader {
            get {
                return ResourceManager.GetString("ErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parser was not found..
        /// </summary>
        internal static string ErrParserNotFound {
            get {
                return ResourceManager.GetString("ErrParserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passwords don&apos;t match..
        /// </summary>
        internal static string ErrPasswordsDontMatch {
            get {
                return ResourceManager.GetString("ErrPasswordsDontMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security exception: {0}.
        /// </summary>
        internal static string ErrSecurityException {
            get {
                return ResourceManager.GetString("ErrSecurityException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error: {0}.
        /// </summary>
        internal static string ErrUnexpectedError {
            get {
                return ResourceManager.GetString("ErrUnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; may have been encrypted with an unknown method..
        /// </summary>
        internal static string ErrUnknownDecryptionMethod {
            get {
                return ResourceManager.GetString("ErrUnknownDecryptionMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file may be encrypted with an unknown method..
        /// </summary>
        internal static string ErrUnknownEncryptionMethod {
            get {
                return ResourceManager.GetString("ErrUnknownEncryptionMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error..
        /// </summary>
        internal static string ErrUnknownError {
            get {
                return ResourceManager.GetString("ErrUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown source &apos;{0}&apos;.
        /// </summary>
        internal static string ErrUnknownSource {
            get {
                return ResourceManager.GetString("ErrUnknownSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command. Run &quot;coblock help&quot; to get a list of the commands and flags to use..
        /// </summary>
        internal static string ErrUnknownVerb {
            get {
                return ResourceManager.GetString("ErrUnknownVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong key type. Use the public key for encryption and the private key for decryption..
        /// </summary>
        internal static string ErrWrongKeyType {
            get {
                return ResourceManager.GetString("ErrWrongKeyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DESTINATION.
        /// </summary>
        internal static string HelpDestination {
            get {
                return ResourceManager.GetString("HelpDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination directory where the processed input file(s) will be stored..
        /// </summary>
        internal static string HelpDestination1 {
            get {
                return ResourceManager.GetString("HelpDestination1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -d 
        ///	Delete the source files after successful encryption..
        /// </summary>
        internal static string HelpFlagDelete {
            get {
                return ResourceManager.GetString("HelpFlagDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -m: 
        ///	Indicates the encryption method to use. The possible values are: 
        ///	aes128: Use the 128bit symmetric AES method.
        ///	aes192: Use the 192bit symmetric AES method
        ///	aes256: Use the 256bit symmetric AES method
        ///	rsa: use the asymmetric RSA method. The -k flag must be used to indicate the key..
        /// </summary>
        internal static string HelpFlagEncryptionMethod {
            get {
                return ResourceManager.GetString("HelpFlagEncryptionMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -h 
        ///	Process even hidden files..
        /// </summary>
        internal static string HelpFlagHidden {
            get {
                return ResourceManager.GetString("HelpFlagHidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -k: 
        ///	Use the given key for encryption or decryption. 
        ///	Encrypt with the public key and decrypt with the private key.  
        ///	The file name of the key must be written as -k:[path/]file_name. 
        ///	If the path or the file name contain spaces, use double quotes. 
        ///	Example: -k:&quot;/home/user/.ssh/my key name.pub&quot;. 
        ///	If the private key is encrypted by a password, the flag -p can also be used with this option..
        /// </summary>
        internal static string HelpFlagKey {
            get {
                return ResourceManager.GetString("HelpFlagKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -s:  
        ///	When creating a key, this flag will indicate the size of it. Possible values:
        ///	1024, 2048, 3072, 4096, 8192.
        /// </summary>
        internal static string HelpFlagKeySize {
            get {
                return ResourceManager.GetString("HelpFlagKeySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -l:
        ///	Laconic mode. Shows file operations only if there are errors. .
        /// </summary>
        internal static string HelpFlagLaconic {
            get {
                return ResourceManager.GetString("HelpFlagLaconic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -p: 
        ///	When using symmetric methods, the password can be written here.
        ///	When using asymmetric methods, and the private key is protected, the password can be indicated here. 
        ///	If no password is assigned but its needed, the program will prompt it for you.
        ///	If the password contains the space character or a double quote (&quot;), surround it by quotes. 
        ///	The double quotes must then be doubled.
        ///	Example: -p&quot;this is a password that contains a &quot;&quot; double quote&quot;.
        /// </summary>
        internal static string HelpFlagPassword {
            get {
                return ResourceManager.GetString("HelpFlagPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -r  
        ///	If the source is a directory, then process all subdirectories as well..
        /// </summary>
        internal static string HelpFlagRecursive {
            get {
                return ResourceManager.GetString("HelpFlagRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FLAGS.
        /// </summary>
        internal static string HelpFlags {
            get {
                return ResourceManager.GetString("HelpFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If provided, these options will take priority over any other configuration file. Simple flags can stack. For example -h -r can be written as -hr..
        /// </summary>
        internal static string HelpFlags1 {
            get {
                return ResourceManager.GetString("HelpFlags1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -y 
        ///	Answer Yes to all questions, for example, when overwriting files..
        /// </summary>
        internal static string HelpFlagYes {
            get {
                return ResourceManager.GetString("HelpFlagYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}) Help file.
        /// </summary>
        internal static string HelpIntro {
            get {
                return ResourceManager.GetString("HelpIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOURCE.
        /// </summary>
        internal static string HelpSource {
            get {
                return ResourceManager.GetString("HelpSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source files to encrypt or decrypt. 
        ///	A file or a directory can be indicated as the source. 
        ///	Masks are allowed in the file part of the path. Surround the source by quotes if the source contains space characters.
        ///	When creating a key pair, the file name to store the public key can be indicated here..
        /// </summary>
        internal static string HelpSource1 {
            get {
                return ResourceManager.GetString("HelpSource1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: coblock VERB [FLAGS] [SOURCE] [DESTINATION].
        /// </summary>
        internal static string HelpUsage {
            get {
                return ResourceManager.GetString("HelpUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VERB.
        /// </summary>
        internal static string HelpVerb {
            get {
                return ResourceManager.GetString("HelpVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command to use. This is an obligatory part of the syntax. The verb can be written fully or using the short form..
        /// </summary>
        internal static string HelpVerb1 {
            get {
                return ResourceManager.GetString("HelpVerb1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to about, a :
        ///	Shows the version of the program and the &quot;about&quot; information (same as version)..
        /// </summary>
        internal static string HelpVerbAbout {
            get {
                return ResourceManager.GetString("HelpVerbAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to config, c: 
        ///	Creates a default configuration file for the current user. 
        ///	This file can dictate the default flags or options to use if nothing else is given. 
        ///	The command line arguments override those options..
        /// </summary>
        internal static string HelpVerbConfig {
            get {
                return ResourceManager.GetString("HelpVerbConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create-keys, ck: 
        ///	Creates a key pair to use with the RSA encryption method..
        /// </summary>
        internal static string HelpVerbCreateKeys {
            get {
                return ResourceManager.GetString("HelpVerbCreateKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decrypt, d: 
        ///	Decrypts the source into the destination directory..
        /// </summary>
        internal static string HelpVerbDecrypt {
            get {
                return ResourceManager.GetString("HelpVerbDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to encrypt, e: 
        ///	Encrypts the source into the destination directory..
        /// </summary>
        internal static string HelpVerbEncrypt {
            get {
                return ResourceManager.GetString("HelpVerbEncrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to encrypt-password, ep: 
        ///	Encrypts a password in order to store it in the settings file..
        /// </summary>
        internal static string HelpVerbEncryptPassword {
            get {
                return ResourceManager.GetString("HelpVerbEncryptPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help, h : 
        ///	Shows this help file..
        /// </summary>
        internal static string HelpVerbHelp {
            get {
                return ResourceManager.GetString("HelpVerbHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to version, v : 
        ///	Shows the version of the program and the &quot;about&quot; information (same as about)..
        /// </summary>
        internal static string HelpVerbVersion {
            get {
                return ResourceManager.GetString("HelpVerbVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation aborted by the user..
        /// </summary>
        internal static string MsgAborted {
            get {
                return ResourceManager.GetString("MsgAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file has been successfully created..
        /// </summary>
        internal static string MsgConfigFileCreated {
            get {
                return ResourceManager.GetString("MsgConfigFileCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a pair of keys to use with the RSA method. .
        /// </summary>
        internal static string MsgCreateKey {
            get {
                return ResourceManager.GetString("MsgCreateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the file name (with or without path). File extensions will be added automatically: .
        /// </summary>
        internal static string MsgCreateKeyFileName {
            get {
                return ResourceManager.GetString("MsgCreateKeyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating the directory &apos;{0}&apos;..
        /// </summary>
        internal static string MsgCreatingDirectory {
            get {
                return ResourceManager.GetString("MsgCreatingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypting &apos;{0}&apos;....
        /// </summary>
        internal static string MsgDecryptingFile {
            get {
                return ResourceManager.GetString("MsgDecryptingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the password for the private key. If the key is unprotected, just press enter:.
        /// </summary>
        internal static string MsgDecryptKeyPassword {
            get {
                return ResourceManager.GetString("MsgDecryptKeyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the default encrypting method (aes256)..
        /// </summary>
        internal static string MsgDefaultMethod {
            get {
                return ResourceManager.GetString("MsgDefaultMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t delete the file &apos;{0}&apos;..
        /// </summary>
        internal static string MsgDeletionError {
            get {
                return ResourceManager.GetString("MsgDeletionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypting &apos;{0}&apos;..
        /// </summary>
        internal static string MsgEncryptingFile {
            get {
                return ResourceManager.GetString("MsgEncryptingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the password you want to encrypt. The password will not be shown on the screen:.
        /// </summary>
        internal static string MsgEncryptPasswordEnter {
            get {
                return ResourceManager.GetString("MsgEncryptPasswordEnter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm the password:.
        /// </summary>
        internal static string MsgEncryptPasswordEnterRe {
            get {
                return ResourceManager.GetString("MsgEncryptPasswordEnterRe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the directory name where the processed file(s) will be stored:.
        /// </summary>
        internal static string MsgEnterDestination {
            get {
                return ResourceManager.GetString("MsgEnterDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a password to protect the private key. Press ENTER to leave the private key unprotected..
        /// </summary>
        internal static string MsgEnterKeyPassword {
            get {
                return ResourceManager.GetString("MsgEnterKeyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm the password used to protect your private key:.
        /// </summary>
        internal static string MsgEnterKeyPasswordRe {
            get {
                return ResourceManager.GetString("MsgEnterKeyPasswordRe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the password for decryption:.
        /// </summary>
        internal static string MsgEnterPasswordDecryption {
            get {
                return ResourceManager.GetString("MsgEnterPasswordDecryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the password to use for encryption. Please, use a long and complex password:.
        /// </summary>
        internal static string MsgEnterPasswordForEncryption {
            get {
                return ResourceManager.GetString("MsgEnterPasswordForEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the path and file name of the private key to use for decryption:.
        /// </summary>
        internal static string MsgEnterPrivateKey {
            get {
                return ResourceManager.GetString("MsgEnterPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the path and file name of the public key to use for encryption:.
        /// </summary>
        internal static string MsgEnterPublicKey {
            get {
                return ResourceManager.GetString("MsgEnterPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the source file, directory or mask to encrypt: .
        /// </summary>
        internal static string MsgEnterSource {
            get {
                return ResourceManager.GetString("MsgEnterSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the file, directory or mask to decrypt:.
        /// </summary>
        internal static string MsgEnterSourceD {
            get {
                return ResourceManager.GetString("MsgEnterSourceD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source file &apos;{0}&apos; has been successfully deleted..
        /// </summary>
        internal static string MsgFileDeleted {
            get {
                return ResourceManager.GetString("MsgFileDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid answer..
        /// </summary>
        internal static string MsgInvalidAnswer {
            get {
                return ResourceManager.GetString("MsgInvalidAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or both keys already exist. Do you want to overwrite them? (y/n).
        /// </summary>
        internal static string MsgKeyExistsWarning {
            get {
                return ResourceManager.GetString("MsgKeyExistsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key pair was successfully created..
        /// </summary>
        internal static string MsgKeysCreatedSuccessfully {
            get {
                return ResourceManager.GetString("MsgKeysCreatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT leave your private key in the same place where your private key is located. Move it to some save place and keep it safe and private!.
        /// </summary>
        internal static string MsgKeysWarning {
            get {
                return ResourceManager.GetString("MsgKeysWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypted files: {0}, created directories: {1}, errors: {2}..
        /// </summary>
        internal static string MsgMassDecryption {
            get {
                return ResourceManager.GetString("MsgMassDecryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted files: {0}, created directories: {1}, errors: {2}..
        /// </summary>
        internal static string MsgMassEncryption {
            get {
                return ResourceManager.GetString("MsgMassEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-enter the password to use for encryption:.
        /// </summary>
        internal static string MsgReEnterPasswordForEncryption {
            get {
                return ResourceManager.GetString("MsgReEnterPasswordForEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; already exists. Do you want to replace that file with the default settings? (y/n).
        /// </summary>
        internal static string MsgReplaceConfig {
            get {
                return ResourceManager.GetString("MsgReplaceConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; exists already. Do you want to replace it?   (y/n/a/c).
        /// </summary>
        internal static string MsgReplaceFile {
            get {
                return ResourceManager.GetString("MsgReplaceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; has been successfully decrypted..
        /// </summary>
        internal static string MsgSingleFileDecrypted {
            get {
                return ResourceManager.GetString("MsgSingleFileDecrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; has been successfully encrypted..
        /// </summary>
        internal static string MsgSingleFileEncrypted {
            get {
                return ResourceManager.GetString("MsgSingleFileEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the default key size of 2048 bits..
        /// </summary>
        internal static string MsgUsingDefaultKeySize {
            get {
                return ResourceManager.GetString("MsgUsingDefaultKeySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .:.  {0} .
        /// </summary>
        internal static string StrSpecialMessage {
            get {
                return ResourceManager.GetString("StrSpecialMessage", resourceCulture);
            }
        }
    }
}
